name: Generate Website and add as Release

on: [push]
    


# Performs the following steps:
#   - Install all dependencies (and caches them for future runs)
#   - Builds the website
#   - Compresses the generated website
#   - Packages the generated website
#   - Creates a release based on the originating tag
#   - Attaches the package to the release
jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby
        uses: actions/setup-ruby@v1

      - name: Ruby Cache
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-

      - name: Install Bundler and Jekyll
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          gem install bundler
          bundle install --path vendor/bundle

      - name: Build website
        run: |
          bundle exec jekyll build -d _site/

      - name: Install Minify
        run: |
          sudo apt-get update
          sudo apt-get install minify

      - name: Compress entire website
        run: |
          minify --all --html-keep-document-tags --html-keep-end-tags -r -o _site_compressed/ _site/

      - name: Package generated website
        run: |
          cd _site_compressed/
          zip -r ../website.zip *
          cd ../

    #   - name: Create Release
    #     uses: actions/create-release@v1
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     with:
    #     #   tag_name: ${{ github.ref }}
    #     #   release_name: Release ${{ github.ref }}
    #       tag_name: v240522_2
    #       release_name: v240522_2
    #       draft: false
    #       prerelease: false

    #   - name: Upload zipped Website as Release Asset
    #     uses: actions/upload-release-asset@v1
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     with:
    #       # This pulls from the CREATE RELEASE step above, referencing it's ID
    #       # to get its outputs object, which include a `upload_url`. See this
    #       # blog post for more info:
    #       # https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
    #     #   upload_url: ${{ steps.create_release.outputs.upload_url }}
    #       upload_url: ${{ github.repository }}
    #       asset_path: ./website.zip
    #       asset_name: website.zip
    #       asset_content_type: application/zip 